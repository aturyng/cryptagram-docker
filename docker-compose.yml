version: '3.8'

services:
    frontend: 
        extends:
            file: docker-compose.base.yml
            service: frontend
        ports:
            - 80:80
            - 443:443
        volumes:
            - ./docker/frontend/prod/nginx-conf:/etc/nginx/conf.d
            - ./docker/frontend/prod/certbot/conf:/etc/letsencrypt
            - ./docker/frontend/prod/certbot/www:/var/www/certbot
        deploy:
            placement:
                constraints: 
                  - "node.role==manager"
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
        depends_on: 
            - backend

    certbot:
        image: certbot/certbot
        restart: unless-stopped
        volumes:
            - ./docker/frontend/prod/certbot/conf:/etc/letsencrypt
            - ./docker/frontend/prod/certbot/www:/var/www/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
        depends_on: 
            - frontend

    backend:
        extends:
            file: docker-compose.base.yml
            service: backend
        deploy:
            placement:
                constraints:
                  - "node.role==manager"
        depends_on:
            - db

    db:
        extends:
            file: docker-compose.base.yml
            service: db

    tasks-runner:
        extends:
            file: docker-compose.base.yml
            service: tasks-runner
        depends_on:
            - backend

volumes:
    static_volume:
    postgres_data:
