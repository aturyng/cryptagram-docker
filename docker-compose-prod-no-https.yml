version: '3.8'

services:
    frontend: 
        image: aturyng/cryptagram-frontend:latest
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/frontend/prod/Dockerfile
        ports:
            - 80:80
        volumes:
            - static_volume:/app/backend/static
            - ./docker/frontend/dev/nginx-conf:/etc/nginx/conf.d
        depends_on: 
            - backend
            - redis

    backend:
        image: aturyng/cryptagram-backend:latest
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./docker/backend/prod/Dockerfile 
        command: gunicorn messenger_project.wsgi --bind 0.0.0.0:8000 #--workers 4 --threads 4
        expose:
            - 8000
        deploy:
            placement:
                constraints:
                  - "node.role==worker"
        env_file:
            - ./docker/backend/dev/.env
        depends_on:
            - db

    db:
        image: postgres:15.3
        ports:
            - 5432:5432
        volumes:
        - postgres_data:/var/lib/postgresql/data/
        env_file:
        - ./docker/db/dev/.env

    redis:
      image: redis:alpine

    celery:
      image: aturyng/cryptagram-backend:latest
      build:
          context: .
          dockerfile: ./docker/backend/prod/Dockerfile 
      command: celery -A messenger_project worker -l info
      env_file:
        - ./docker/celery/dev/.env
      depends_on:
        - redis

    celery-beat:
      image: aturyng/cryptagram-backend:latest
      build:
          context: .
          dockerfile: ./docker/backend/prod/Dockerfile 
      command: celery -A messenger_project beat -l info #--scheduler django_celery_beat.schedulers:DatabaseScheduler
      env_file:
        - ./docker/celery-beat/dev/.env
      depends_on:
        - redis

volumes:
    static_volume:
    postgres_data: